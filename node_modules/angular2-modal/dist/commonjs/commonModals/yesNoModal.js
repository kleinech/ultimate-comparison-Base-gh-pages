"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var ICustomModal_1 = require('../models/ICustomModal');
var ModalDialogInstance_1 = require('../models/ModalDialogInstance');
/**
 * @deprecated
 */
var YesNoModalContent = (function () {
    function YesNoModalContent(title, body, hideNo, yesText, noText) {
        if (title === void 0) { title = 'Hello World Title'; }
        if (body === void 0) { body = 'Hello World Body!'; }
        if (hideNo === void 0) { hideNo = false; }
        if (yesText === void 0) { yesText = 'YES'; }
        if (noText === void 0) { noText = 'NO'; }
        this.title = title;
        this.body = body;
        this.hideNo = hideNo;
        this.yesText = yesText;
        this.noText = noText;
    }
    return YesNoModalContent;
}());
exports.YesNoModalContent = YesNoModalContent;
/**
 * @deprecated
 */
var YesNoModal = (function () {
    function YesNoModal(dialog, modelContentData) {
        this.dialog = dialog;
        this.context = modelContentData;
        console.warn('DEPRECATED: YesNoModal will not be available in next version of ' +
            'angular2-modal, please move to the preset API.');
    }
    YesNoModal.prototype.ok = function ($event) {
        $event.stopPropagation();
        this.dialog.close(true);
    };
    YesNoModal.prototype.cancel = function () {
        this.dialog.dismiss();
    };
    YesNoModal = __decorate([
        core_1.Component({
            selector: 'modal-content',
            directives: [],
            /* tslint:disable */ template: "<div class=\"modal-header\">\n        <h3 class=\"modal-title\">{{context.title}}</h3>\n        </div>\n        <div class=\"modal-body\">{{context.body}}</div>\n        <div class=\"modal-footer\">\n            <button class=\"btn btn-primary\" (click)=\"ok($event)\">{{context.yesText}}</button>\n            <button *ngIf=\"!context.hideNo\" class=\"btn btn-warning\" (click)=\"cancel()\">{{context.noText}}</button>\n        </div>"
        }), 
        __metadata('design:paramtypes', [ModalDialogInstance_1.ModalDialogInstance, ICustomModal_1.ICustomModal])
    ], YesNoModal);
    return YesNoModal;
}());
exports.YesNoModal = YesNoModal;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieWVzTm9Nb2RhbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2FuZ3VsYXIyLW1vZGFsL2NvbW1vbk1vZGFscy95ZXNOb01vZGFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxxQkFBdUQsZUFBZSxDQUFDLENBQUE7QUFHdkUsNkJBQWtELHdCQUF3QixDQUFDLENBQUE7QUFDM0Usb0NBQWtDLCtCQUErQixDQUFDLENBQUE7QUFFbEU7O0dBRUc7QUFDSDtJQUNJLDJCQUNXLEtBQW1DLEVBQ25DLElBQWtDLEVBQ2xDLE1BQXVCLEVBQ3ZCLE9BQXVCLEVBQ3ZCLE1BQXFCO1FBSjVCLHFCQUEwQyxHQUExQywyQkFBMEM7UUFDMUMsb0JBQXlDLEdBQXpDLDBCQUF5QztRQUN6QyxzQkFBOEIsR0FBOUIsY0FBOEI7UUFDOUIsdUJBQThCLEdBQTlCLGVBQThCO1FBQzlCLHNCQUE0QixHQUE1QixhQUE0QjtRQUpyQixVQUFLLEdBQUwsS0FBSyxDQUE4QjtRQUNuQyxTQUFJLEdBQUosSUFBSSxDQUE4QjtRQUNsQyxXQUFNLEdBQU4sTUFBTSxDQUFpQjtRQUN2QixZQUFPLEdBQVAsT0FBTyxDQUFnQjtRQUN2QixXQUFNLEdBQU4sTUFBTSxDQUFlO0lBQzdCLENBQUM7SUFDUix3QkFBQztBQUFELENBQUMsQUFSRCxJQVFDO0FBUlkseUJBQWlCLG9CQVE3QixDQUFBO0FBRUQ7O0dBRUc7QUFjSDtJQUlJLG9CQUFZLE1BQTJCLEVBQUUsZ0JBQThCO1FBQ25FLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLEdBQXNCLGdCQUFnQixDQUFDO1FBQ25ELE9BQU8sQ0FBQyxJQUFJLENBQUMsa0VBQWtFO1lBQzNFLGdEQUFnRCxDQUFDLENBQUE7SUFFekQsQ0FBQztJQUVELHVCQUFFLEdBQUYsVUFBRyxNQUFXO1FBQ1YsTUFBTSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCwyQkFBTSxHQUFOO1FBQ0ksSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBaENMO1FBQUMsZ0JBQVMsQ0FBQztZQUNQLFFBQVEsRUFBRSxlQUFlO1lBQ3pCLFVBQVUsRUFBRSxFQUFFO1lBQ2Qsb0JBQW9CLENBQUMsUUFBUSxFQUM3QixxYkFPVztTQUNkLENBQUM7O2tCQUFBO0lBcUJGLGlCQUFDO0FBQUQsQ0FBQyxBQXBCRCxJQW9CQztBQXBCWSxrQkFBVSxhQW9CdEIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBwcm92aWRlLCBFbGVtZW50UmVmLCBJbmplY3Rvcn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cblxuaW1wb3J0IHtJQ3VzdG9tTW9kYWwsIElDdXN0b21Nb2RhbENvbXBvbmVudH0gZnJvbSAnLi4vbW9kZWxzL0lDdXN0b21Nb2RhbCc7XG5pbXBvcnQge01vZGFsRGlhbG9nSW5zdGFuY2V9IGZyb20gJy4uL21vZGVscy9Nb2RhbERpYWxvZ0luc3RhbmNlJztcblxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICovXG5leHBvcnQgY2xhc3MgWWVzTm9Nb2RhbENvbnRlbnQge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICBwdWJsaWMgdGl0bGU6IHN0cmluZyA9ICdIZWxsbyBXb3JsZCBUaXRsZScsXG4gICAgICAgIHB1YmxpYyBib2R5OiBzdHJpbmcgPSAnSGVsbG8gV29ybGQgQm9keSEnLFxuICAgICAgICBwdWJsaWMgaGlkZU5vOiBib29sZWFuID0gZmFsc2UsXG4gICAgICAgIHB1YmxpYyB5ZXNUZXh0OiBzdHJpbmcgPSAnWUVTJyxcbiAgICAgICAgcHVibGljIG5vVGV4dDogc3RyaW5nID0gJ05PJ1xuICAgICkge31cbn1cblxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ21vZGFsLWNvbnRlbnQnLFxuICAgIGRpcmVjdGl2ZXM6IFtdLFxuICAgIC8qIHRzbGludDpkaXNhYmxlICovIHRlbXBsYXRlOlxuICAgIGA8ZGl2IGNsYXNzPVwibW9kYWwtaGVhZGVyXCI+XG4gICAgICAgIDxoMyBjbGFzcz1cIm1vZGFsLXRpdGxlXCI+e3tjb250ZXh0LnRpdGxlfX08L2gzPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIm1vZGFsLWJvZHlcIj57e2NvbnRleHQuYm9keX19PC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1mb290ZXJcIj5cbiAgICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXByaW1hcnlcIiAoY2xpY2spPVwib2soJGV2ZW50KVwiPnt7Y29udGV4dC55ZXNUZXh0fX08L2J1dHRvbj5cbiAgICAgICAgICAgIDxidXR0b24gKm5nSWY9XCIhY29udGV4dC5oaWRlTm9cIiBjbGFzcz1cImJ0biBidG4td2FybmluZ1wiIChjbGljayk9XCJjYW5jZWwoKVwiPnt7Y29udGV4dC5ub1RleHR9fTwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5gXG59KVxuZXhwb3J0IGNsYXNzIFllc05vTW9kYWwgaW1wbGVtZW50cyBJQ3VzdG9tTW9kYWxDb21wb25lbnQge1xuICAgIGRpYWxvZzogTW9kYWxEaWFsb2dJbnN0YW5jZTtcbiAgICBjb250ZXh0OiBZZXNOb01vZGFsQ29udGVudDtcblxuICAgIGNvbnN0cnVjdG9yKGRpYWxvZzogTW9kYWxEaWFsb2dJbnN0YW5jZSwgbW9kZWxDb250ZW50RGF0YTogSUN1c3RvbU1vZGFsKSB7XG4gICAgICAgIHRoaXMuZGlhbG9nID0gZGlhbG9nO1xuICAgICAgICB0aGlzLmNvbnRleHQgPSA8WWVzTm9Nb2RhbENvbnRlbnQ+bW9kZWxDb250ZW50RGF0YTtcbiAgICAgICAgY29uc29sZS53YXJuKCdERVBSRUNBVEVEOiBZZXNOb01vZGFsIHdpbGwgbm90IGJlIGF2YWlsYWJsZSBpbiBuZXh0IHZlcnNpb24gb2YgJyArXG4gICAgICAgICAgICAnYW5ndWxhcjItbW9kYWwsIHBsZWFzZSBtb3ZlIHRvIHRoZSBwcmVzZXQgQVBJLicpXG5cbiAgICB9XG5cbiAgICBvaygkZXZlbnQ6IGFueSkge1xuICAgICAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIHRoaXMuZGlhbG9nLmNsb3NlKHRydWUpO1xuICAgIH1cblxuICAgIGNhbmNlbCgpIHtcbiAgICAgICAgdGhpcy5kaWFsb2cuZGlzbWlzcygpO1xuICAgIH1cbn1cbiJdfQ==