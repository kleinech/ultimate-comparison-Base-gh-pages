{"version":3,"sources":["pipes/datafilter.pipe.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAOA;gBAAA;gBA+CA,CAAC;gBA7CG,8BAAS,GAAT,UAAU,KAAiB,EAAE,IAAqB;oBAAlD,iBAeC;oBAf4B,oBAAqB,GAArB,SAAqB;oBAC9C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;wBACZ,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI;wBACrB,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAA,IAAI;4BACxB,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;gCAC1B,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;oCACrB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;oCAC1B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oCAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oCAChC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAA;wBAC7F,CAAC,CAAC,CAAA;oBACN,CAAC,CAAC,CAAA;gBACN,CAAC;gBAED,8BAAS,GAAT,UAAU,SAAwB,EAAE,OAAsB,EAAE,GAAW;oBACnE,IAAI,KAAK,GAAW,GAAG,CAAC;oBACxB,EAAE,CAAA,CAAC,CAAC,OAAO,CAAC,CAAA,CAAC;wBACT,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC;oBACD,EAAE,CAAA,CAAC,GAAG,CAAC,CAAA,CAAC;wBACJ,yDAAyD;wBACzD,SAAS,CAAC,KAAK,CAAC,UAAA,OAAO;4BACnB,EAAE,CAAA,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC;gCAC7B,KAAK,GAAG,KAAK,CAAC;gCACd,MAAM,CAAC,KAAK,CAAC;4BACjB,CAAC;4BACD,MAAM,CAAC,IAAI,CAAC;wBAChB,CAAC,CAAC,CAAC;oBACP,CAAC;oBAAA,IAAI,CAAA,CAAC;wBACF,gCAAgC;wBAChC,SAAS,CAAC,IAAI,CAAC,UAAA,OAAO;4BAClB,EAAE,CAAA,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,CAAC;gCAC9B,KAAK,GAAG,IAAI,CAAC;gCACb,MAAM,CAAC,IAAI,CAAC;4BAChB,CAAC;wBACL,CAAC,CAAC,CAAA;oBACN,CAAC;oBACD,EAAE,CAAA,CAAC,CAAC,KAAK,IAAE,SAAS,CAAC,MAAM,IAAE,CAAC,CAAC,CAAA,CAAC;wBAC5B,MAAM,CAAC,IAAI,CAAC;oBAChB,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAnDL;oBAAC,WAAI,CAAC;wBACF,IAAI,EAAE,YAAY;wBAClB,IAAI,EAAE,KAAK;qBAEd,CAAC;;8BAAA;gBAgDF,iBAAC;YAAD,CA/CA,AA+CC,IAAA;YA/CD,mCA+CC,CAAA","file":"pipes/datafilter.pipe.js","sourcesContent":["import {Pipe, PipeTransform}    from '@angular/core';\n\n@Pipe({ \n    name: 'datafilter',\n    pure: false\n    \n})\nexport class DataFilter implements PipeTransform {\n    private query: any[];\n    transform(value: Array<any>, args: Array<any> = []){\n        this.query = args;\n        if(!this.query){\n            return value;\n        }\n        return value.filter((item) => {               \n            return this.query.every(cont => {\n                return (cont.value.length < 1) || \n                    ( item[cont.crit.tag] && \n                    item[cont.crit.tag].childs && \n                    item[cont.crit.tag].childs[0] && \n                    item[cont.crit.tag].childs[0][0] && \n                    this.intersect(cont.value, item[cont.crit.tag].childs[0][0], cont.crit.selectOption))\n            })\n        })   \n    }\n    \n    intersect(small_set: Array<string>, big_set: Array<string>, all:boolean){\n        var inter:boolean = all;\n        if(!big_set){\n            return false;\n        }\n        if(all){\n            // all elements from the small_set must be in the big_set\n            small_set.every(element => {\n                if(big_set.indexOf(element) < 0){\n                    inter = false;\n                    return false;\n                }\n                return true;\n            });            \n        }else{\n            // at least one elmenet must fit\n            small_set.some(element => {\n                if(big_set.indexOf(element) > -1){\n                    inter = true;\n                    return true;\n                }\n            })\n        }\n        if(!inter&&small_set.length==0){\n            return true;\n        }\n        return inter;\n    }\n}\n"],"sourceRoot":"/source/"}