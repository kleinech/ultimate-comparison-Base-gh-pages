{"version":3,"sources":["components/data-form/data-form.component.ts"],"names":[],"mappings":"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","file":"components/data-form/data-form.component.js","sourcesContent":["import { Component, ViewChild, ContentChild, ElementRef } from '@angular/core';\nimport { Title } from '@angular/platform-browser'\nimport { Http, HTTP_PROVIDERS } from '@angular/http';\nimport { TOOLTIP_DIRECTIVES } from 'ng2-bootstrap/components/tooltip';\nimport * as showdown from 'showdown';\n\nimport { PolymerElement } from '@vaadin/angular2-polymer';\n\nimport { DataFilter } from '../../pipes/datafilter.pipe';\nimport { JQSelect } from '../select/jq-select';\nimport { ModalComponentMarkdown } from '../modal/modal';\nimport { TableFilter }      from '../../pipes/tablefilter.pipe';\nimport { TableData, Type, LabelCls, Value, Data, Property, ListItem } from './../shared/index';\nimport { PaperChechboxDirective  } from '../select/checkbox.component';\nimport { PaperDialogDirective } from '../modal/dialog.component';\nimport { ModalDialog } from '../modal/modal.component';\n\n@Component({\n    selector: 'data-form',\n    templateUrl: 'app/templates/main.tpl.html',\n    providers: [HTTP_PROVIDERS, Title],\n    pipes: [DataFilter, TableFilter],\n    directives: [\n        JQSelect, \n        ModalComponentMarkdown, \n        TOOLTIP_DIRECTIVES, \n        PolymerElement('paper-header-panel'),\n        PolymerElement('paper-dialog'),\n        PolymerElement('paper-toolbar'),\n        PolymerElement('paper-card'),\n        PolymerElement('paper-listbox'),\n        PolymerElement('paper-item'),\n        PolymerElement('paper-checkbox'),\n        PaperDialogDirective,\n        ModalDialog\n    ]\n})\nexport class DataFormComponent {\n    data: Array<Data> = new Array<Data>();\n    dataLoaded: boolean = false;\n    \n    table: Array<TableData> = new Array<TableData>();\n    tableLoaded: boolean = false;\n    \n    criteria = []\n    criteriaLoaded: boolean = false;\n    \n    detail = {}\n    detailLoaded: boolean = false;\n    \n    comparison = {\n        details: \"\",\n        title: \"\"\n    }\n    comparisonLoaded: boolean = false;\n    \n    criteriaSelection = [];\n    query = [];\n    counter : number;\n    \n    private converter: Showdown.Converter;\n    \n    constructor(private http: Http, public title: Title){\n        this.counter = 0;\n        this.converter = new showdown.Converter();      \n        http.request('app/data/Table.json')\n        .subscribe(res => {\n            res.json().forEach(obj => {\n                let lcls: LabelCls = new LabelCls();\n                var values: {[name: string]: string;} = { };\n                if(obj.type.values){\n                    obj.type.values.forEach(val => {\n                        let value: Value = new Value(val.name, val.description);\n                        values[val.name] = val.description;\n                        switch(val.class){\n                            case \"label-success\": \n                                lcls.label_success.push(value);\n                                break;\n                            case \"label-warning\": \n                                lcls.label_warning.push(value);\n                                break;\n                            case \"label-danger\": \n                                lcls.label_danger.push(value);\n                                break;\n                            case \"label-default\": \n                                lcls.label_default.push(value);\n                                break;\n                            case \"label-info\": \n                                lcls.label_info.push(value);\n                                break;\n                            case \"label-primary\": \n                                lcls.label_primary.push(value);\n                                break;\n                        }\n                    })\n                }\n                let type: Type = new Type(\n                    obj.type.tag,\n                    obj.type.class,\n                    lcls    \n                )\n                let td: TableData = new TableData(\n                    obj.name,\n                    obj.tag,\n                    obj.style,\n                    obj.display,\n                    type,\n                    values\n                )\n                this.table.push(td);\n            })\n            this.tableLoaded = true;\n            this.readData();\n        });\n        \n        http.request('app/data/Comparison.json')\n        .subscribe(res => {\n            this.comparison = res.json();\n            this.comparisonLoaded = true;\n            this.detail = this.comparison.details\n            this.detailLoaded = true;\n            this.title.setTitle(this.comparison.title);\n        });\n        \n        http.request('app/data/Criteria.json')\n        .subscribe(res => {\n            this.criteria = res.json();\n            this.criteria.map(value => {\n                value.id = this.counter++;\n            })\n            this.criteriaLoaded = true;\n        });\n    }\n    \n    private readData(){\n         this.http.request('app/data/Data.json')\n        .subscribe(res => {\n            res.json().forEach(obj => {\n                let data: Data = new Data();\n                data.tag = obj.tag;\n                let regArray = /^((?:(?:\\w+\\s*)(?:-?\\s*\\w+.)*)+)\\s*-?\\s*((?:http|ftp|https)(?::\\/\\/)(?:[\\w_-]+(?:(?:\\.[\\w_-]+)+))(?:[\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])?)$/gi.exec(data.tag);\n                data.url = regArray ? regArray[2]: \"\";\n                data.tag = regArray ? regArray[1]: data.tag;\n                for(let key in obj){\n                    if (!obj.hasOwnProperty(key)) continue;\n                    switch(key){\n                        case \"tag\":\n                            break;\n                        case \"descr\":\n                            data.descr = obj[key];\n                            break;\n                        case \"Description\":\n                            data.properties[key] = new Property(obj[key].plain);\n                            break;\n                        default:\n                            let p:Property = new Property();\n                            p.plain = obj[key].plain\n                            if (this.getTableData(key) && this.getTableData(key).type.tag == \"text\"){\n                                p.text == obj[key].text\n                            } else {\n                                if(typeof obj[key].childs[0][0] != 'string'){\n                                    obj[key].childs[0][0].forEach(item => {\n                                        let content: string = item.content;\n                                        let plainChilds: string = item.plainChilds;\n                                        let itm: ListItem = new ListItem(content, plainChilds, this.converter);\n                                        p.list.push(itm);\n                                    });    \n                                }\n                            }\n                            data.properties[key] = p;\n                            break;\n                    } \n                };\n                this.data.push(data); \n            });\n            \n            this.dataLoaded = true;\n        });\n    }\n    \n    public getTableData(name: string): TableData{\n        let result: TableData;\n        this.table.forEach(entry => {\n            if(entry.tag == name) {\n                result = entry;\n                return entry;\n            }\n        })\n        return result;\n    }\n    \n    private CriteriaChanged(value:Array<String>, crit:any ){\n        if (value){\n            this.query[crit.id] = {\n                value: value,\n                crit: crit    \n            };\n        }\n    }\n    \n    @ViewChild(ModalComponentMarkdown) modalcomponent: ModalComponentMarkdown;\n    private onShowDetails(data:Data){\n        this.modalcomponent.open(data, this.detail, this.table);\n    }\n    \n    \n    @ViewChild('settings') tprop: ModalDialog;\n    private showTableProperties(){\n        this.tprop.open();\n    }\n}\n"],"sourceRoot":"/source/"}