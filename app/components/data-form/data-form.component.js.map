{"version":3,"sources":["components/data-form/data-form.component.ts"],"names":[],"mappings":"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","file":"components/data-form/data-form.component.js","sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { Title } from '@angular/platform-browser'\nimport { Http, HTTP_PROVIDERS } from '@angular/http';\n\nimport { DataFilter } from '../../pipes/datafilter.pipe';\nimport { JQSelect } from '../select/jq-select';\nimport { ModalComponentMarkdown } from '../modal/modal';\nimport { TableFilter }      from '../../pipes/tablefilter.pipe';\nimport { TableData, Type, LabelCls } from './../shared/index';\n\n@Component({\n    selector: 'data-form',\n    templateUrl: 'app/templates/main.tpl.html',\n    providers: [HTTP_PROVIDERS, Title],\n    pipes: [DataFilter, TableFilter],\n    directives: [JQSelect, ModalComponentMarkdown]\n})\nexport class DataFormComponent {\n    data: Array<any> = new Array<any>();\n    dataLoaded: boolean = false;\n    \n    table: Array<TableData> = new Array<TableData>();\n    tableLoaded: boolean = false;\n    \n    criteria = []\n    criteriaLoaded: boolean = false;\n    \n    detail = {}\n    detailLoaded: boolean = false;\n    \n    comparison = {\n        details: \"\",\n        title: \"\"\n    }\n    comparisonLoaded: boolean = false;\n    \n    criteriaSelection = [];\n    query = [];\n    counter : number;\n    \n    constructor(http: Http, public title: Title){\n        this.counter = 0;\n        http.request('app/data/Data.json')\n        .subscribe(res => {\n            this.data = res.json();\n            this.data.forEach(entry => {\n                if (entry.tag){\n                    let regArray = /^((?:(?:\\w+\\s*)(?:-?\\s*\\w+)*)+)\\s*-?\\s*((?:http|ftp|https)(?::\\/\\/)(?:[\\w_-]+(?:(?:\\.[\\w_-]+)+))(?:[\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])?)$/gi.exec(entry.tag);\n                    entry.url = regArray ? regArray[2]: \"\";\n                    entry.tag = regArray ? regArray[1]: entry.tag;\n                }\n            })\n            this.dataLoaded = true;\n        });\n                \n        http.request('app/data/Table.json')\n        .subscribe(res => {\n            res.json().forEach(obj => {\n                let lcls: LabelCls = new LabelCls();\n                if(obj.type.ngClass){\n                    lcls.label_success = obj.type.ngClass[\"label-success\"] ? obj.type.ngClass[\"label-success\"] : new Array<String>();\n                    lcls.label_warning = obj.type.ngClass[\"label-warning\"] ? obj.type.ngClass[\"label-warning\"] : new Array<String>();\n                    lcls.label_danger = obj.type.ngClass[\"label-danger\"] ? obj.type.ngClass[\"label-danger\"] : new Array<String>();\n                    lcls.label_default = obj.type.ngClass[\"label-default\"] ? obj.type.ngClass[\"label-default\"] : new Array<String>();\n                    lcls.label_info = obj.type.ngClass[\"label-info\"] ? obj.type.ngClass[\"label-info\"] : new Array<String>();\n                    lcls.label_primary = obj.type.ngClass[\"label-primary\"] ? obj.type.ngClass[\"label-primary\"] : new Array<String>();\n                }\n                let type: Type = new Type(\n                    obj.type.tag,\n                    obj.type.class,\n                    lcls    \n                )\n                let td: TableData = new TableData(\n                    obj.name,\n                    obj.tag,\n                    obj.style,\n                    obj.display,\n                    type\n                )\n                this.table.push(td);\n            })\n            this.tableLoaded = true;\n        });\n        \n        http.request('app/data/Comparison.json')\n        .subscribe(res => {\n            this.comparison = res.json();\n            this.comparisonLoaded = true;\n            this.detail = this.comparison.details\n            this.detailLoaded = true;\n            this.title.setTitle(this.comparison.title);\n        });\n        \n        http.request('app/data/Criteria.json')\n        .subscribe(res => {\n            this.criteria = res.json();\n            this.criteria.map(value => {\n                //value.id = value.name.replace(/[^a-zA-Z0-9]+/,\"\");\n                value.id = this.counter++;\n            })\n            this.criteriaLoaded = true;\n        });\n    }\n    \n    private CriteriaChanged(value:Array<String>, crit:any ){\n        if (value){\n            this.query[crit.id] = {\n                value: value,\n                crit: crit    \n            };\n        }\n    }\n    \n    @ViewChild(ModalComponentMarkdown) modalcomponent: ModalComponentMarkdown;\n    private onShowDetails(data:any){\n        this.modalcomponent.open(data, this.detail, this.table);\n    }\n    \n    public getLabelClass(item:string, column:TableData): string{\n        return column.type.ngCls.getCls(item);\n    }\n}\n"],"sourceRoot":"/source/"}