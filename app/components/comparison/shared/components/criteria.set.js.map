{"version":3,"sources":["components/comparison/shared/components/criteria.set.ts"],"names":[],"mappings":";AAAA,wBAAgC,UAAU,CAAC,CAAA;AAE3C;IAEI,YAAY,OAAY;QADhB,gBAAW,GAAgC,EAAG,CAAA;QAElD,OAAO,CAAC,OAAO,CAAC,IAAI;YAChB,IAAI,QAAQ,GAAa,IAAI,gBAAQ,EAAE,CAAC;YACxC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;YACjD,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;YACxB,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YAChE,QAAQ,CAAC,UAAU,GAAG,OAAO,IAAI,CAAC,UAAU,KAAK,OAAO,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAC3F,IAAI,CAAC,MAAM,CAAC,OAAO,CAAE,GAAG;gBACpB,IAAI,KAAK,GAAU,IAAI,aAAK,EAAE,CAAC;gBAC/B,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,iBAAiB,CAAC;gBACrD,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,GAAG,EAAE,CAAC;gBAC3D,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YAChE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,gBAAgB;QACnB,IAAI,GAAG,GAAoB,IAAI,KAAK,EAAY,CAAC;QACjD,GAAG,CAAA,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,CAAC,CAAA,CAAC;YAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;gBAAC,QAAQ,CAAC;YACpD,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACpC,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IAEM,WAAW,CAAC,GAAW;QAC1B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,gBAAQ,EAAE,CAAC;IAC1E,CAAC;AACL,CAAC;AAhCY,mBAAW,cAgCvB,CAAA","file":"components/comparison/shared/components/criteria.set.js","sourcesContent":["import { Criteria, Value } from '../index';\n\nexport class CriteriaSet {\n    private criteriaSet: {[name: string]: Criteria;} = { }\n    constructor(jsonObj: any){\n        jsonObj.forEach(crit => {\n            let criteria: Criteria = new Criteria();\n            criteria.name = crit.name ? crit.name : crit.tag;\n            criteria.tag = crit.tag;\n            criteria.description = crit.description ? crit.description : \"\";\n            criteria.and_search = typeof crit.and_search !== typeof undefined ? crit.and_search : true;\n            crit.values.forEach( val => {\n                let value: Value = new Value();\n                value.name = val.name ? val.name : \"undefined value\";\n                value.description = val.description ? val.description : \"\";\n                criteria.values.push(value);\n            });\n            criteria.placeholder = crit.placeholder ? crit.placeholder : \"\";\n            this.criteriaSet[crit.tag] = criteria;\n        });\n    }\n    \n    public getCriteriaArray(): Array<Criteria> {\n        let set: Array<Criteria> = new Array<Criteria>();\n        for(let key in this.criteriaSet){\n            if (!this.criteriaSet.hasOwnProperty(key)) continue;\n            set.push(this.criteriaSet[key]);\n        }\n        return set;\n    }\n    \n    public getCriteria(tag: string): Criteria{\n        return this.criteriaSet[tag] ? this.criteriaSet[tag] : new Criteria();\n    }\n}"],"sourceRoot":"/source/"}