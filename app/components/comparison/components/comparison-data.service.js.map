{"version":3,"sources":["components/comparison/components/comparison-data.service.ts"],"names":[],"mappings":"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","file":"comparison-data.service.js","sourcesContent":["import { Injectable, ChangeDetectorRef } from '@angular/core';\nimport { Http } from '@angular/http';\n\nimport { TableData, TableDataSet, Type, LabelCls, Value, Data, Property, ListItem } from './../shared/index';\nimport { ComparisonConfigService } from './comparison-config.service';\nimport { ComparisonService } from './comparison.service';\n\n@Injectable()\nexport class ComparisonDataService {\n    private data: Array<Data> = new Array<Data>();\n    private tags: {[name: string]: string;} = { };\n    \n    constructor(\n            private http: Http,\n            private comparisonService: ComparisonService\n        ){}\n    \n    public loadData(tableDataSet: TableDataSet, cd: ChangeDetectorRef){\n        this.http.request('app/components/comparison/data/data.json')\n        .subscribe(res => {\n            res.json().forEach(obj => {\n                let data: Data = new Data();\n                data.tag = obj.tag;\n                let regArray = /^((?:(?:\\w+\\s*)(?:-?\\s*\\w+.)*)+)\\s*-?\\s*((?:(?:http|ftp|https)(?::\\/\\/)(?:[\\w_-]+(?:(?:\\.[\\w_-]+)+))|(?:www.))(?:[\\w.,@?^=%&:\\/~+#-]*[\\w@?^=%&\\/~+#-])?)$/gi.exec(data.tag);\n                data.url = regArray ? regArray[2]: \"\";\n                if (/^(www)/.test(data.url)) data.url = \"http://\" + data.url;\n                data.tag = regArray ? regArray[1]: data.tag;\n                for(let key in obj){\n                    if (!obj.hasOwnProperty(key)) continue;\n                    switch(key){\n                        case \"tag\":\n                            break;\n                        case \"descr\":\n                            data.descr = obj[key];\n                            break;\n                        case \"Description\":\n                            data.properties[key] = new Property(obj[key].plain);\n                            break;\n                        default:\n                            let p:Property = new Property();\n                            this.tags[key] = key;\n                            p.plain = obj[key].plain\n                            if (tableDataSet.getTableData(key).type.tag == \"text\"){\n                                p.text == obj[key].text\n                            } else {\n                                if(typeof obj[key].childs[0][0] != 'string'){\n                                    obj[key].childs[0][0].forEach(item => {\n                                        let content: string = item.content;\n                                        let plainChilds: string = item.plainChilds;\n                                        let itm: ListItem = new ListItem(content, plainChilds, this.comparisonService.converter);\n                                        p.list.push(itm);\n                                    });    \n                                }\n                            }\n                            data.properties[key] = p;\n                            break;\n                    } \n                };\n                this.data.push(data); \n            });\n            cd.markForCheck();\n    });\n}\n\n    public getDefaultAttachmentTags(): Array<string>{\n        let tags: Array<string> = new Array<string>();\n        for(let key in this.tags){\n            if (!this.tags.hasOwnProperty(key) || key == \"tag\" || key == \"url\" || key == \"descr\" ) continue;\n            tags.push(this.tags[key]);\n        }\n        return tags;\n    }\n}"]}